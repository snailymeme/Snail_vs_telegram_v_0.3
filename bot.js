/**
 * Snail to Riches - Telegram Bot —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Web App
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram –¥–ª—è –∏–≥—Ä—ã
 */

const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const express = require('express');
const cors = require('cors');
require('dotenv').config();

// ========== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==========
const CONFIG = {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    botToken: process.env.TELEGRAM_BOT_TOKEN,
    
    // –ü–æ—Ä—Ç –¥–ª—è –≤–µ–±-—Ö—É–∫–∞ –∏ —Å–µ—Ä–≤–µ—Ä–∞
    port: process.env.PORT || 443,
    botPort: process.env.BOT_PORT || 3000, // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Ä—Ç –¥–ª—è –±–æ—Ç–∞
    
    // URL –≤–∞—à–µ–π –∏–≥—Ä—ã
    gameUrl: process.env.SERVER_URL || 'https://snail-vs-telegram-v-0-3-production.up.railway.app',
    
    // URL –¥–ª—è –≤–µ–±-—Ö—É–∫–∞
    webhookUrl: process.env.WEBHOOK_URL || 'https://snail-vs-telegram-v-0-3-production.up.railway.app/bot',
    
    // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ –≤–µ–±-—Ö—É–∫ (–≤–º–µ—Å—Ç–æ polling)
    useWebhook: true // –í–∫–ª—é—á–∞–µ–º webhook –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ Railway
};

// ========== –õ–û–ì–ì–ò–†–û–í–ê–ù–ò–ï ==========
function log(message, level = 'info') {
    const timestamp = new Date().toLocaleTimeString();
    const prefixes = {
        info: 'üî∑',
        success: '‚úÖ',
        error: '‚ùå',
        warning: '‚ö†Ô∏è'
    };
    
    const prefix = prefixes[level] || '‚Ä¢';
    console.log(`${prefix} [${timestamp}] ${message}`);
}

// ========== –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ==========
if (!CONFIG.botToken) {
    log('TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω —É–∫–∞–∑–∞–Ω –≤ .env —Ñ–∞–π–ª–µ.', 'error');
    process.exit(1);
}

// ========== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ==========
console.log('==========================================================');
console.log('–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø TELEGRAM –ë–û–¢–ê:');
console.log(`–¢–æ–∫–µ–Ω: ${CONFIG.botToken ? CONFIG.botToken.substring(0, 10) + '...' : '–ù–µ –∑–∞–¥–∞–Ω'}`);
console.log(`–†–µ–∂–∏–º: ${CONFIG.useWebhook ? 'Webhook' : 'Long Polling'}`);
console.log(`URL –∏–≥—Ä—ã: ${CONFIG.gameUrl}`);
console.log(`Webhook URL: ${CONFIG.webhookUrl}`);
console.log(`–í–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç: ${CONFIG.port}, –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Ä—Ç: ${CONFIG.botPort}`);
console.log(`–†–µ–∂–∏–º –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${process.env.NODE_ENV || 'development'}`);
console.log('==========================================================');

// ========== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–û–¢–ê ==========
let bot;
try {
    if (CONFIG.useWebhook) {
        // –°–æ–∑–¥–∞–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±-—Ö—É–∫–∞
        const app = express();
        
        // –†–∞–∑—Ä–µ—à–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        app.use(cors());
        
        // Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
        app.use(express.json());
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –±–µ–∑ polling
        bot = new TelegramBot(CONFIG.botToken, { polling: false });
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Ö—É–∫
        bot.setWebHook(CONFIG.webhookUrl).then(() => {
            log(`–í–µ–±-—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${CONFIG.webhookUrl}`, 'success');
        }).catch(error => {
            log(`–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±-—Ö—É–∫–∞: ${error.message}`, 'error');
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–µ–±-—Ö—É–∫–∞
        app.post('/bot', (req, res) => {
            bot.processUpdate(req.body);
            res.sendStatus(200);
        });
        
        // –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
        app.get('/', (req, res) => {
            res.send('Telegram Bot Server is running!');
        });
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        const serverPort = CONFIG.botPort || CONFIG.port;
        app.listen(serverPort, () => {
            log(`Express —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${serverPort}`, 'success');
            log(`–í–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç: ${CONFIG.port}, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Ä—Ç: ${serverPort}`, 'info');
            log(`–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è URL –∏–≥—Ä—ã: ${CONFIG.gameUrl}`, 'info');
        });
    } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∂–∏–º polling (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
        console.log('–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ Long Polling...');
        bot = new TelegramBot(CONFIG.botToken, { polling: true });
        log('Telegram Bot —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ —Ä–µ–∂–∏–º–µ polling', 'success');
        log(`–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è URL –∏–≥—Ä—ã: ${CONFIG.gameUrl}`, 'info');
    }
} catch (error) {
    log(`–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram Bot: ${error.message}`, 'error');
    process.exit(1);
}

// ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–û–ë–©–ï–ù–ò–ô ==========
/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Web App
 */
async function sendWelcomeMessage(chatId) {
    try {
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–±—ã—á–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞
        const keyboard = {
            keyboard: [
                [
                    {
                        text: 'üéÆ –ò–≥—Ä–∞—Ç—å –≤ Snail to Riches',
                        web_app: { url: CONFIG.gameUrl }
                    }
                ]
            ],
            resize_keyboard: true,
            one_time_keyboard: false
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
        await bot.sendMessage(
            chatId, 
            '–ü—Ä–∏–≤–µ—Ç! üêå –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É –ø—Ä—è–º–æ –≤ Telegram:', 
            { reply_markup: keyboard }
        );
        
        log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Web App –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`, 'success');
    } catch (error) {
        log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`, 'error');
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    log(`–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`, 'info');
    await sendWelcomeMessage(chatId);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, async (msg) => {
    const chatId = msg.chat.id;
    log(`–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`, 'info');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–∫—É—é –∂–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞–∫ –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    const keyboard = {
        keyboard: [
            [
                {
                    text: 'üéÆ –ò–≥—Ä–∞—Ç—å –≤ Snail to Riches',
                    web_app: { url: CONFIG.gameUrl }
                }
            ]
        ],
        resize_keyboard: true,
        one_time_keyboard: false
    };
    
    const helpMessage = `üêå *Snail to Riches - –ü–æ–º–æ—â—å* üêå

/start - –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ`;

    await bot.sendMessage(chatId, helpMessage, { 
        parse_mode: 'Markdown',
        reply_markup: keyboard 
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
bot.on('message', async (msg) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏
    if (!msg.text || msg.text.startsWith('/start') || msg.text.startsWith('/help')) {
        return;
    }
    
    const chatId = msg.chat.id;
    log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}: ${msg.text}`, 'info');
    
    await bot.sendMessage(chatId, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏–ª–∏ /help –¥–ª—è –ø–æ–º–æ—â–∏.');
});

// ========== –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ò–Ø –†–ê–ë–û–¢–´ ==========
process.on('SIGINT', async () => {
    log('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...', 'warning');
    if (CONFIG.useWebhook) {
        await bot.deleteWebHook();
    } else {
        await bot.close();
    }
    process.exit(0);
});

process.on('SIGTERM', async () => {
    log('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...', 'warning');
    if (CONFIG.useWebhook) {
        await bot.deleteWebHook();
    } else {
        await bot.close();
    }
    process.exit(0);
});

log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π', 'success'); 